// contactForm.js
import { LightningElement, track } from 'lwc';
import { createRecord } from 'lightning/uiRecordApi';
import CONTACT_OBJECT from '@salesforce/schema/Contact';
import { ShowToastEvent } from 'lightning/platformShowToastEvent';
export default class ContactForm extends LightningElement {
    @track firstName;
    @track lastName;
    @track middleName;
    @track birthdate;
    @track ssn;
    @track planId;
    @track email;
    @track phone;
    @track mailingStreet;
    @track mailingCity;
    @track mailingState;
    @track mailingPostalCode;
    @track mailingCountry;

    handleFirstNameChange(event) {
        this.firstName = event.target.value;
    }

    handleLastNameChange(event) {
        this.lastName = event.target.value;
    }

    handleMiddleNameChange(event) {
        this.middleName = event.target.value;
    }

    handleBirthdateChange(event) {
        this.birthdate = event.target.value;
    }

    handleSSNChange(event) {
        this.ssn = event.target.value;
    }

    handlePlanIdChange(event) {
        this.planId = event.target.value;
    }

    handleEmailChange(event) {
        this.email = event.target.value;
    }

    handlePhoneChange(event) {
        this.phone = event.target.value;
    }

    handleMailingStreetChange(event) {
        this.mailingStreet = event.target.value;
    }

    handleMailingCityChange(event) {
        this.mailingCity = event.target.value;
    }

    handleMailingStateChange(event) {
        this.mailingState = event.target.value;
    }

    handleMailingPostalCodeChange(event) {
        this.mailingPostalCode = event.target.value;
    }

    handleMailingCountryChange(event) {
        this.mailingCountry = event.target.value;
    }

    handleSave() {
        const fields = {
            FirstName: this.firstName,
            LastName: this.lastName,
            MiddleName: this.middleName,
            Birthdate: this.birthdate,
            SSN__c: this.ssn,
            PlanId__c: this.planId,
            Email: this.email,
            Phone: this.phone,
            MailingStreet: this.mailingStreet,
            MailingCity: this.mailingCity,
            MailingState: this.mailingState,
            MailingPostalCode: this.mailingPostalCode,
            MailingCountry: this.mailingCountry
        };

        const recordInput = { apiName: CONTACT_OBJECT.objectApiName, fields };

        createRecord(recordInput)
           .then(contact => {
                this.message = contact;
                this.error = undefined;
                if(this.message !== undefined) {                    
                    this.dispatchEvent(
                        new ShowToastEvent({
                            title: 'Success',
                            message: 'Contact created',
                            variant: 'success',
                        }),
                    );
                }
                
                console.log(JSON.stringify(contact));
                console.log("contact", this.message);
            })
             .catch(error => {
                this.message = undefined;
                this.error = error;
                this.dispatchEvent(
                    new ShowToastEvent({
                        title: 'Error creating record',
                        message: error.body.message,
                        variant: 'error',
                    }),
                );
                console.log("error", JSON.stringify(this.error));
            });
    }
}